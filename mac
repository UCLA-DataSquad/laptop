#!/bin/sh

# Welcome to the thoughtbot laptop script!
# Be prepared to turn your laptop (or desktop, no haters here)
# into an awesome development machine.

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\\n$fmt\\n" "$@"
}

append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.zshrc.local" ]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\\n" "$text" >> "$zshrc"
    else
      printf "\\n%s\\n" "$text" >> "$zshrc"
    fi
  fi
}

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

# shellcheck disable=SC2016
append_to_zshrc 'export PATH="$HOME/.bin:$PATH"'

#brew installs in /opt in apple silicon which is already available/writable by user
#HOMEBREW_PREFIX="/opt"
#
#if [ -d "$HOMEBREW_PREFIX" ]; then
#  if ! [ -r "$HOMEBREW_PREFIX" ]; then
#    sudo chown -R "$LOGNAME:admin" /opt
#  fi
#else
#  sudo mkdir "$HOMEBREW_PREFIX"
#  sudo chflags norestricted "$HOMEBREW_PREFIX"
#  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
#fi

update_shell() {
  local shell_path;
  shell_path="$(command -v zsh)"

  fancy_echo "Changing your shell to zsh ..."
  if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
    fancy_echo "Adding '$shell_path' to /etc/shells"
    sudo sh -c "echo $shell_path >> /etc/shells"
  fi
  sudo chsh -s "$shell_path" "$USER"
}

case "$SHELL" in
  */zsh)
    if [ "$(command -v zsh)" != '/usr/local/bin/zsh' ] ; then
      update_shell
    fi
    ;;
  *)
    update_shell
    ;;
esac

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    gem update "$@"
  else
    gem install "$@"
  fi
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    /bin/bash -c \
      "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"

    append_to_zshrc '# recommended by brew doctor'

    # shellcheck disable=SC2016
    #append_to_zshrc 'export PATH="/usr/local/bin:$PATH"' 1
    echo 'eval $(/opt/homebrew/bin/brew shellenv)' >> $HOME/.zprofile
    eval $(/opt/homebrew/bin/brew shellenv)

    source ~/.zshrc
fi

if brew list | grep -Fq brew-cask; then
  fancy_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

fancy_echo "Updating Homebrew formulae ..."
brew update --force # https://github.com/Homebrew/brew/issues/1151
brew bundle --file=- <<EOF
#tap "thoughtbot/formulae"
tap "homebrew/services"
tap "universal-ctags/universal-ctags"
tap "homebrew/cask"
tap "buo/cask-upgrade"
tap "homebrew/core"
tap "homebrew/bundle"
tap "buo/cask-upgrade"
tap "homebrew/cask-fonts"

# Unix
brew "universal-ctags", args: ["HEAD"]
brew "git"
brew "openssl"
brew "rcm"
brew "reattach-to-user-namespace"
brew "the_silver_searcher"
brew "tmux"
brew "vim"
brew "watchman"
brew "zsh"
brew "gcc" 
brew "xz" 
brew "libxt" 
brew "cairo"
brew "rlwrap"
#brew "pandoc" 
brew "tree"
brew "jq"
brew "wget"
brew "rclone"
brew "tree"
brew "docker"

# GitHub
brew "gh"

# Image manipulation
brew "imagemagick"

# Programming language prerequisites and package managers
brew "libyaml" # should come after openssl
brew "coreutils"

#Programming languages 
#brew "r"
brew "miniforge" #minicoda built for new archs & pins conda-forge as default package 

#apps
cask "openrefine"
cask "iterm2"
cask "firefox"
cask "google-chrome"
EOF

#fancy_echo "Updating Brew Casks"

#brew cu -a

fancy_echo "Cleaning up old Homebrew formulae ..."
brew cleanup

## Install anaconda if not already installed
#if ! command -v conda >/dev/null; then
#
#    curl -s  https://repo.anaconda.com/archive/Anaconda3-2020.11-MacOSX-x86_64.sh -o anaconda3.sh
#    #use -b to say yes to all interaction & -p prefix to put anaconda3 install in /volumne
#    bash anaconda3.sh -b
#    #need to add path to .zshrc.local so conda will be available on boot
#    append_to_zshrc 'export PATH="~/anaconda3/bin:$PATH"'
#    export PATH="~/anaconda3/bin:$PATH"
#fi

#conda install -y csvkit
conda update -y conda
#conda update -y anaconda

if [ -d "/Volumes/Macintosh HD/Applications/RStudio.app" ]; then
    #install RStudio & use tool to mount and move .app to /Volumes/Macintosh HD/Applications/
    # install nightly build to match brew path 
    echo "yes"
fi

# uncomment if you want to create and run your own local additions to this script
#if [ -f ".laptop.local" ]; then
#  fancy_echo "Running your customizations from ~/.laptop.local ..."
#  # shellcheck disable=SC1090
#  sh ".laptop.local"
#fi

